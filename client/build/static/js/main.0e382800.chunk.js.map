{"version":3,"sources":["utils/mutations.js","utils/auth.js","pages/Home.js","pages/Signup.js","pages/User.js","pages/Projects.js","pages/Coworkers.js","pages/IndividualProject.js","pages/IndividualTask.js","components/Header.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["LOGIN_USER","gql","CREATE_USER","decode","this","getToken","token","isTokenExpired","exp","Date","now","localStorage","removeItem","getItem","idToken","setItem","window","location","assign","reload","Home","props","useState","email","password","formState","SetFormState","useMutation","login","handleChange","error","data","event","target","name","value","handleFormSubmit","preventDefault","console","log","variables","Auth","className","id","role","onSubmit","for","placeholder","type","onChange","to","Signup","username","setFormState","addUser","style","cursor","message","User","border","Projects","SingleProject","Tasks","Header","class","href","Footer","useLocation","useNavigate","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","path","element","Coworkers","IndividualProject","IndividualTask","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e382800.chunk.js","sourcesContent":["import { gql } from '@apollo/client';\n\nexport const LOGIN_USER = gql`\nmutation Login($email: String!, $password: String!) {\n  login(email: $email, password: $password) {\n    token\n    user {\n      username\n      _id\n    }\n  }\n}\n`;\n\nexport const CREATE_USER = gql`\nmutation CreateUser($username: String!, $email: String!, $password: String!, $firstName: String!, $lastName: String!) {\n  createUser(username: $username, email: $email, password: $password, firstName: $firstName, lastName: $lastName) {\n    token\n    user {\n      username\n      _id\n    }\n  }\n}\n`;\n\nexport const CREATE_USERCOMMENT = gql`\n  mutation createUserComment($messageText: String!) {\n    createUserComment(messageText: $messageText) {\n      _id\n      messageText\n      messageAuthor\n      createdAt\n    }\n  }\n`;\n\nexport const UPDATE_USERCOMMENT = gql`\n  mutation updateUserComment($messageText: String!) {\n    updateUserComment(messageText: $messageText) {\n      _id\n      messageText\n      messageAuthor\n      createdAt\n    }\n  }\n`;\n\n// export const CREATE_PROJECT = gql`\n//   mutation createProject($projectName: String!) {\n//     createProject(projectName: $projectTitle) {\n//       _id\n//       projectName\n//       createdAt\n//     }\n//   }\n// `;\n\n// export const CREATE_PROJECTCOMMENT = gql`\n//   mutation createProjectComment($messageText: String!) {\n//     createProjectComment(messageText: $messageText) {\n//       _id\n//       messageText\n//       messageAuthor\n//       createdAt\n//     }\n//   }\n// `;\n\n// export const UPDATE_PROJECTCOMMENT = gql`\n//   mutation updateProjectComment($messageText: String!) {\n//     updateProjectComment(messageText: $messageText) {\n//       _id\n//       messageText\n//       messageAuthor\n//       createdAt\n//     }\n//   }\n// `;\n\n// export const CREATE_TASK = gql`\n//   mutation createTask($taskText: String!) {\n//     createTask(taskText: $taskText) {\n//       _id\n//       taskText\n//       createdAt\n//     }\n//   }\n// `;\n\n// export const UPDATE_PROJECTTASK = gql`\n//   mutation updateProjectTask($taskText: String!) {\n//     updateProjectTask(taskText: $taskText) {\n//       _id\n//       taskText\n//       createdAt\n//     }\n//   }\n// `;\n\n// export const DELETE_PROJECTTASK = gql`\n//   mutation deleteProjectTask($taskText: String!) {\n//     deleteProjectTask(taskText: $taskText) {\n//       _id\n//       taskText\n//       createdAt\n//     }\n//   }\n// `;\n\n// export const ADD_PROJECTMEMBER = gql`\n//   mutation addProjectMemeber($) {\n//     addProjectMember() {\n//       _id\n\n//     }\n//   }\n// `;\n\n// export const UPDATE_USERPROJECTS = gql`\n//   mutation updateUserProjects($) {\n//     updateUserProjects() {\n//       _id\n\n//     }\n//   }\n// `;\n\n// export const UPDATE_USERCOWORKERS = gql`\n//   mutation updateUserCoworkers($) {\n//     updateUserCoworkers() {\n//       _id\n\n//     }\n//   }\n// `;\n\n// export const UPDATE_USERABOUTME = gql`\n//   mutation updateUserAboutMe($) {\n//     updateUserAboutMe() {\n//       _id\n\n//     }\n//   }\n// `;","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    // If there is a token and it's not expired, return `true`\n    return token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  isTokenExpired(token) {\n    // Decode the token to get its expiration time that was set by the server\n    const decoded = decode(token);\n    // If the expiration time is less than the current time (in seconds), the token is expired and we return `true`\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem('id_token');\n      return true;\n    }\n    // If token hasn't passed its expiration time, return `false`\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    localStorage.removeItem('id_token');\n    window.location.reload();\n  }\n}\n\nexport default new AuthService();\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n// import { useQuery } from '@apollo/client';\nimport { useMutation } from '@apollo/client';\n\nimport { LOGIN_USER } from '../utils/mutations';\n\nimport Auth from \"../utils/auth\";\n\nconst Home = (props) => {\n  const [formState, SetFormState] = useState({ email: \"\", password: \"\" });\n  const [login, { error, data }] = useMutation(LOGIN_USER);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    SetFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    SetFormState({\n      email: \"\",\n      password: \"\",\n    });\n  };\n\n  return (\n    <main>\n      <div className=\"tab-content\">\n        <div\n          className=\"tab-pane fade show active\"\n          id=\"pills-login\"\n          role=\"tabpanel\"\n          aria-labelledby=\"tab-login\"\n        >\n          <form onSubmit={handleFormSubmit}>\n            <div className=\"form-outline mb-4\">\n            <label className=\"form-label\" for=\"loginName\">\n                Email\n              </label>\n              <input\n                className=\"form-control\"\n                placeholder=\"Your email\"\n                type=\"email\"\n                name=\"email\"\n                value={formState.email}\n                onChange={handleChange}\n              />\n            </div>\n            <label className=\"form-label\" for=\"loginPassword\">\n                Password\n              </label>\n            <div className=\"form-outline mb-4\">\n              <input\n                className=\"form-control\"\n                placeholder=\"******\"\n                type=\"password\"\n                name=\"password\"\n                value={formState.password}\n                onChange={handleChange}\n              />\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary btn-block mb-4\">\n              Sign in\n            </button>\n          </form>\n          <button type=\"submit\" className=\"btn  btn-block mb-4\">\n            <Link to=\"/signup\">Signup</Link>\n          </button>\n        </div>\n        <div\n          className=\"tab-pane fade\"\n          id=\"pills-register\"\n          role=\"tabpanel\"\n          aria-labelledby=\"tab-register\"\n        >\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Home;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\n\nimport { CREATE_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\n\nconst Signup = () => {\n  const [formState, setFormState] = useState({\n    username: '',\n    email: '',\n    password: '',\n  });\n  const [addUser, { error, data }] = useMutation(CREATE_USER);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n\n    try {\n      const { data } = await addUser({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.addUser.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-lg-10\">\n        <div className=\"card\">\n          <h4 className=\"card-header bg-dark text-light p-2\">Sign Up</h4>\n          <div className=\"card-body\">\n              <form onSubmit={handleFormSubmit}>\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your username\"\n                  name=\"username\"\n                  type=\"text\"\n                  value={formState.name}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={formState.email}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onChange={handleChange}\n                />\n                <button\n                  className=\"btn btn-block btn-primary\"\n                  style={{ cursor: 'pointer' }}\n                  type=\"submit\"\n                >\n                  Submit\n                </button>\n              </form>\n            {error && (\n              <div className=\"my-3 p-3 bg-danger text-white\">\n                {error.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Signup;\n","import React from 'react';\n// import { useParams } from 'react-router-dom';\n// import { useQuery } from '@apollo/client';\n// import { useMutation } from '@apollo/client';\n\n// import MyMessageForm from '../components/MyMessageForm';\n// import MyMessageList from '../components/MyMessageList';\n// import MyProjectList from '../components/MyProjects';\n// import UserComp from '../components/UserComp';\n\n// import { QUERY_USERCOMMENTS, QUERY_PROJECTS} from '../utils/queries';\n// import { ADD_USERCOMMENT } from '../utils/mutations';\n\n\nconst User = () => {\n  // const { loading, data } = useQuery(QUERY_USERCOMMENTS, QUERY_PROJECTS);\n  // const comments = data?.comments || [];\n  // const projects = data?.projects || [];\n\n  return (\n    <main>\n      {/* My Messages/comments should hug the left side of the page, likely col-3 */}\n      <h1>THIS IS THE USERS PAGE</h1>\n      <div className=\"flex-row justify-center\">\n        <div\n          className=\"col-12 col-md-10 mb-3 p-3\"\n          style={{ border: '1px dotted #1a1a1a' }}\n        >\n          {/* <MyMessageForm /> */}\n        </div>\n        {/* <div className=\"col-12 col-md-8 mb-3\">\n          {loading ? (\n            <div>Loading...</div>\n          ) : ( null\n            <MyMessageList\n            comments={comments}\n            title=\"Some Feed for Thought(s)...\"\n            />\n          )}\n        </div> */}\n      </div>\n\n\n      <div>\n{/*  */}\n        {/* Eventually, the User Compoents go in another div here.  Whatever we decide those are.  About me and such? */}\n{/*  */}\n      </div>\n\n\n      {/* my projects should hug the right side of the page. likely col-3 */}\n      <div className=\"flex-row justify-center\">\n        <div\n          className=\"col-12 col-md-10 mb-3 p-3\"\n          style={{ border: '1px dotted #1a1a1a' }}\n        >\n          {/* <MyProjects \n          projects={projects}\n          /> */}\n          \n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default User;","import React from \"react\";\n// import { useParams } from 'react-router-dom';\n// import { useQuery } from '@apollo/client';\n// import { useMutation } from '@apollo/client';\n\n// import MyMessageForm from '../components/MyMessageForm';\n// import MyMessageList from '../components/MyMessageList';\n// import MyProjectList from '../components/MyProjects';\n// import AllProjects from '../components/AllProjects';\n\n\n// import { QUERY_USERCOMMENTS, QUERY_PROJECTS} from '../utils/queries';\n// import { ADD_USERCOMMENT, ADD_PROJECT } from '../utils/mutations';\n\nconst Projects = () => {\n  // const { loading, data } = useQuery(QUERY_USERCOMMENTS, QUERY_PROJECTS);\n  // const comments = data?.comments || [];\n  // const projects = data?.projects || [];\n\n  return (\n    <main>\n      {/* My Messages/comments should hug the left side of the page, likely col-3 */}\n      <h1>THIS IS THE ALL PROJECTS PAGE</h1>\n      <div className=\"flex-row justify-center\">\n        <div\n          className=\"col-12 col-md-10 mb-3 p-3\"\n          style={{ border: \"1px dotted #1a1a1a\" }}\n        >\n          {/* <MyMessageForm /> */}\n        </div>\n        {/* <div className=\"col-12 col-md-8 mb-3\">\n          {loading ? (\n            <div>Loading...</div>\n          ) : ( null\n            <MyMessageList\n            comments={comments}\n            title=\"Some Feed for Thought(s)...\"\n            />\n          )}\n        </div> */}\n      </div>\n\n      <div>\n{/*  */}\n        {/* Eventually, the Create New Project code goes in another div here.  Not a component */}\n{/*  */}\n      </div>\n\n      <div>\n{/*  */}\n        {/* Eventually, the All Projects Component goes in another div here.  Bottom, Center of Page */}\n{/*  */}\n      </div>\n\n      {/* my projects should hug the right side of the page. likely col-3 */}\n      <div className=\"flex-row justify-center\">\n        <div\n          className=\"col-12 col-md-10 mb-3 p-3\"\n          style={{ border: \"1px dotted #1a1a1a\" }}\n        >\n          {/* <MyProjects \n          projects={projects}\n          /> */}\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Projects;\n","import React from 'react';\n// import { useParams } from 'react-router-dom';\n// import { useQuery } from '@apollo/client';\n// import { useMutation } from '@apollo/client';\n\n// import MyMessageForm from '../components/MyMessageForm';\n// import MyMessageList from '../components/MyMessageList';\n// import MyProjectList from '../components/MyProjects';\n// import UserComp from '../components/UserComp';\n\n// import { QUERY_USERCOMMENTS, QUERY_PROJECTS} from '../utils/queries';\n// import { ADD_USERCOMMENT } from '../utils/mutations';\n\n\nconst User = () => {\n  // const { loading, data } = useQuery(QUERY_USERCOMMENTS, QUERY_PROJECTS);\n  // const comments = data?.comments || [];\n  // const projects = data?.projects || [];\n\n  return (\n    <main>\n      {/* My Messages/comments should hug the left side of the page, likely col-3 */}\n      <h1>THIS IS THE USERS COWORKER PAGE</h1>\n      <div className=\"flex-row justify-left\">\n        <div\n          className=\"col-12 col-md-10 mb-3 p-3\"\n          style={{ border: '1px dotted #1a1a1a' }}\n        >\n          {/* <MyMessageForm /> */}\n        </div>\n        {/* <div className=\"col-12 col-md-8 mb-3\">\n          {loading ? (\n            <div>Loading...</div>\n          ) : ( null\n            <MyMessageList\n            comments={comments}\n            title=\"Some Feed for Thought(s)...\"\n            />\n          )}\n        </div> */}\n      </div>\n\n\n      <div>\n{/*  */}\n        {/* Eventually, the User Compoents go in another div here.  Whatever we decide those are.  About me and such? */}\n{/*  */}\n      </div>\n\n\n      {/* my projects should hug the right side of the page. likely col-3 */}\n      <div className=\"flex-row justify-right\">\n        <div\n          className=\"col-12 col-md-10 mb-3 p-3\"\n          style={{ border: '1px dotted #1a1a1a' }}\n        >\n          {/* <MyProjects \n          projects={projects}\n          /> */}\n          \n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default User;","import React from 'react';\n// import { useParams } from 'react-router-dom';\n// import { useQuery } from '@apollo/client';\n// import { useMutation } from '@apollo/client';\n\n// import ProjectMessageForm from '../components/ProjectMessageForm';\n// import ProjectMessageList from '../components/ProjectMessageList';\n// import MyProjectList from '../components/MyProjects';\n// import ProjectMembers from '../components/ProjectMembers';\n// import ProjectTask from '../components/ProjectTask';\n\n// import { QUERY_PROJECTCOMMENTS, QUERY_PROJECTS, QUERY_TASKS, QUERY_PROJECTMEMBERS} from '../utils/queries';\n// import { ADD_PROJECTCOMMENT} from '../utils/mutations';\n\nconst SingleProject = () => {\n  // const { loading, data } = useQuery(QUERY_PROJECTCOMMENTS, QUERY_PROJECTS);\n  // const comments = data?.comments || [];\n  // const projects = data?.projects || [];\n\n  return (\n    <main>\n      {/* My Messages/comments should hug the left side of the page, likely col-3 */}\n      <h1>THIS IS THE INDIVIDUAL PROJECTS PAGE</h1>\n      <div className=\"flex-row justify-center\">\n        <div\n          className=\"col-12 col-md-10 mb-3 p-3\"\n          style={{ border: '1px dotted #1a1a1a' }}\n        >\n          {/* <ProjectMessageForm /> */}\n        </div>\n        {/* <div className=\"col-12 col-md-8 mb-3\">\n          {loading ? (\n            <div>Loading...</div>\n          ) : ( null\n            <ProjectMessageList\n            comments={comments}\n            title=\"Some Feed for Thought(s)...\"\n            />\n          )}\n        </div> */}\n      </div>\n\n      <div>\n{/*  */}\n        {/* Eventually, the Name gets pulled and goes here.  Top Center of page, wrapped in blue. */}\n{/*  */}\n      </div>\n\n      <div>\n{/*  */}\n        {/* Eventually, the Project Memebers Component goes in another div here. Center Middle of Page */}\n{/*  */}\n      </div>\n\n      <div>\n{/*  */}\n        {/* Eventually, the Project Tasks  Component goes in another div here. Center Bottom of Page*/}\n{/*  */}\n      </div>\n\n\n      {/* my projects should hug the right side of the page. likely col-3 */}\n      <div className=\"flex-row justify-center\">\n        <div\n          className=\"col-12 col-md-10 mb-3 p-3\"\n          style={{ border: '1px dotted #1a1a1a' }}\n        >\n          {/* <MyProjects \n          projects={projects}\n          /> */}\n          \n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default SingleProject;","import React from 'react';\n// import { useParams } from 'react-router-dom';\n// import { useQuery } from '@apollo/client';\n// import { useMutation } from '@apollo/client';\n\n// import ProjectMessageForm from '../components/ProjectMessageForm';\n// import ProjectMessageList from '../components/ProjectMessageList';\n// import MyProjectList from '../components/MyProjects';\n// import IndividualTask from '../components/IndividualTask';\n\n\n// import { QUERY_PROJECTCOMMENTS, QUERY_PROJECTS} from '../utils/queries';\n// import { ADD_PROJECTCOMMENT, ADD_TASK} from '../utils/mutations';\n\n\nconst Tasks = () => {\n  // const { loading, data } = useQuery(QUERY_PROJECTCOMMENTS, QUERY_PROJECTS);\n  // const comments = data?.comments || [];\n  // const projects = data?.projects || [];\n\n  return (\n    <main>\n      {/* My Messages/comments should hug the left side of the page, likely col-3 */}\n      <h1>THIS IS THE TASK PAGE PAGE</h1>\n      <div className=\"flex-row justify-center\">\n        <div\n          className=\"col-12 col-md-10 mb-3 p-3\"\n          style={{ border: '1px dotted #1a1a1a' }}\n        >\n          {/* <ProjectMessageForm /> */}\n        </div>\n        {/* <div className=\"col-12 col-md-8 mb-3\">\n          {loading ? (\n            <div>Loading...</div>\n          ) : ( null\n            <ProjectMessageList\n            comments={comments}\n            title=\"Some Feed for Thought(s)...\"\n            />\n          )}\n        </div> */}\n      </div>\n\n      <div>\n{/*  */}\n        {/* Eventually, the Name gets pulled and goes here.  Top Center of page, wrapped in blue. */}\n{/*  */}\n      </div>\n\n      <div>\n{/*  */}\n        {/* Eventually, the Individual Task Component goes in another div here. */}\n{/*  */}\n      </div>\n\n      {/* my projects should hug the right side of the page. likely col-3 */}\n      <div className=\"flex-row justify-center\">\n        <div\n          className=\"col-12 col-md-10 mb-3 p-3\"\n          style={{ border: '1px dotted #1a1a1a' }}\n        >\n          {/* <MyProjects \n          projects={projects}\n          /> */}\n          \n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Tasks;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Auth from \"../utils/auth\";\n\nconst Header = () => {\n  const logout = (event) => {\n    event.preventDefault();\n    Auth.logout();\n  };\n\n  return (\n    <header className=\"bg-primary text-light mb-4 py-3 flex-row align center\">\n      {/* // <!-- Navbar --> */}\n      <nav class=\"navbar navbar-expand-lg bg-light flex-row justify-content-center\">\n        <div class=\"container-fluid flex-column align-content-center\">\n          <a class=\"navbar-brand\" href=\"/\">\n            <h1>MyWorkSpace</h1>\n          </a>\n          <button\n            class=\"navbar-toggler\"\n            type=\"button\"\n            data-bs-toggle=\"collapse\"\n            data-bs-target=\"#navbarNav\"\n            aria-controls=\"navbarNav\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span class=\"navbar-toggler-icon\"></span>\n          </button>\n          <div class=\"container text-center\">\n            <div class=\"nav-item\">\n              <a class=\"nav-link active\" aria-current=\"page\" href=\"/users/:username/:coworkers\">\n                CoWorkers\n              </a>\n            </div>\n            <div class=\"row align-items-center\">\n              <div class=\"nav-item\">\n                <a class=\"nav-link\" href=\"/projects\">\n                  Projects\n                </a>\n              </div>\n            </div>\n            <div class=\"row align-items-end\">\n              <div class=\"nav-item\">\n                <a class=\"nav-link\" href=\"/users/:username\">\n                  User\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>\n      {/* // <!-- Navbar --> */}\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nconst Footer = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  return (\n    <footer className=\"text-align-center\">\n        <h4><center> Made with React by</center></h4>\n        <h4><center>'Github11', 'Github12', 'Github13', 'Github14'</center></h4>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport Home from \"./pages/Home\";\nimport Signup from \"./pages/Signup\";\nimport User from \"./pages/User\";\nimport Projects from \"./pages/Projects\";\nimport Coworkers from \"./pages/Coworkers\";\nimport IndividualProject from \"./pages/IndividualProject\";\nimport IndividualTask from \"./pages/IndividualTask\";\n\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem(\"id_token\");\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"flex-column justify-flex-start min-100-vh\">\n          <Header />\n          <div className=\"container\">\n            <Routes>\n              <Route \n              path=\"/\" \n              element={<Home />} \n              />\n              <Route \n              path=\"/signup\" \n              element={<Signup />} \n              />\n              <Route \n              path=\"/user\" \n              element={<User />} \n              />\n              <Route \n              path=\"/projects\" \n              element={<Projects />} \n              />\n              <Route \n              path=\"/users/:username\" \n              element={<User />} \n              />\n              <Route \n              path=\"/users/:username/:coworkers\" \n              element={<Coworkers />}\n              />\n              <Route \n              path=\"/projects/:projectId\"\n                element={<IndividualProject />}\n              />\n              <Route\n                path=\"/projects/:projectId\"\n                element={<IndividualProject />}\n              />\n              <Route\n                path=\"/projects/:projectId/:taskID\"\n                element={<IndividualTask />}\n              />\n            </Routes>\n          </div>\n          <Footer />\n        </div>\n      </Router>\n      {console.log(\"Hello There\")}\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}