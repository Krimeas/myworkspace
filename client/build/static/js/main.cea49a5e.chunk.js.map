{"version":3,"sources":["utils/mutations.js","utils/auth.js","pages/Home.js","pages/Signup.js","pages/User.js","components/AllProjects.js","components/AddProject.js","utils/queries.js","pages/Projects.js","pages/Coworkers.js","components/IndividualProject.js","components/ProjectTask.js","pages/IndividualProject.js","pages/IndividualTask.js","components/Header.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["LOGIN_USER","gql","CREATE_USER","CREATE_PROJECT","decode","this","getToken","token","isTokenExpired","exp","Date","now","localStorage","removeItem","getItem","idToken","setItem","window","location","assign","reload","Home","props","useState","email","password","formState","SetFormState","useMutation","login","handleChange","error","data","event","target","name","value","handleFormSubmit","preventDefault","console","log","variables","Auth","className","id","role","onSubmit","placeholder","type","onChange","to","Signup","username","firstName","lastName","setFormState","createUser","style","cursor","message","User","border","AllProjectsList","projects","length","map","project","_id","projectName","AddProject","projectDescription","createProject","QUERY_PROJECTS","QUERY_PROJECT","Projects","useQuery","loading","GetProjects","Container","fluid","AllProjects","IndividualProject","ProjectName","ProjectDescription","owner","ProjectTask","tasks","task","SingleProject","projectId","useParams","GetProjectById","Tasks","Header","href","Footer","useLocation","useNavigate","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","path","element","Coworkers","IndividualTask","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAEaA,EAAaC,YAAG,gNAahBC,EAAcD,YAAG,2UAkCjBE,EAAiBF,YAAG,uQ,GAWIA,YAAG,0Q,uBCpBzB,MAtCE,4CAmCd,OAnCc,uCACf,WACE,OAAOG,YAAOC,KAAKC,WACrB,GAAC,sBAED,WACE,IAAMC,EAAQF,KAAKC,WAEnB,SAAOC,GAAUF,KAAKG,eAAeD,GACvC,GAAC,4BAED,SAAeA,GAIb,OAFgBH,YAAOG,GAEXE,IAAMC,KAAKC,MAAQ,MAC7BC,aAAaC,WAAW,aACjB,EAIX,GAAC,sBAED,WACE,OAAOD,aAAaE,QAAQ,WAC9B,GAAC,mBAED,SAAMC,GACJH,aAAaI,QAAQ,WAAYD,GACjCE,OAAOC,SAASC,OAAO,QACzB,GAAC,oBAED,WACEP,aAAaC,WAAW,YACxBI,OAAOC,SAASE,QAClB,KAAC,EAnCc,I,OC6FFC,EAvFF,SAACC,GACZ,MAAkCC,mBAAS,CAAEC,MAAO,GAAIC,SAAU,KAAK,mBAAhEC,EAAS,KAAEC,EAAY,KAC9B,EAAiCC,YAAY5B,GAAW,mBAAjD6B,EAAK,YAENC,GAFe,EAALC,MAAW,EAAJC,KAEF,SAACC,GACpB,MAAwBA,EAAMC,OAAtBC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAEdT,EAAa,2BACRD,GAAS,kBACXS,EAAOC,IAEZ,GAEMC,EAAgB,iDAAG,WAAOJ,GAAK,mFAEZ,OADvBA,EAAMK,iBACNC,QAAQC,IAAId,GAAW,kBAEEG,EAAM,CAC3BY,UAAU,eAAMf,KACf,KAAD,WAFMM,EAAI,EAAJA,KAIRU,EAAKb,MAAMG,EAAKH,MAAMtB,OAAO,kDAE7BgC,QAAQR,MAAM,EAAD,IAAI,QAGnBJ,EAAa,CACXH,MAAO,GACPC,SAAU,KACT,0DACJ,gBAjBqB,sCAmBtB,OACE,+BACE,sBAAKkB,UAAU,cAAa,UAC1B,sBACEA,UAAU,4BACVC,GAAG,cACHC,KAAK,WACL,kBAAgB,YAAW,UAE3B,uBAAMC,SAAUT,EAAiB,UAC/B,sBAAKM,UAAU,oBAAmB,UAChC,uBAAOA,UAAU,aAAY,mBAG7B,uBACEA,UAAU,eACVI,YAAY,aACZC,KAAK,QACLb,KAAK,QACLC,MAAOV,EAAUF,MACjByB,SAAUnB,OAGd,uBAAOa,UAAU,aAAY,sBAG7B,qBAAKA,UAAU,oBAAmB,SAChC,uBACEA,UAAU,eACVI,YAAY,SACZC,KAAK,WACLb,KAAK,WACLC,MAAOV,EAAUD,SACjBwB,SAAUnB,MAGd,wBAAQkB,KAAK,SAASL,UAAU,iCAAgC,wBAIlE,wBAAQK,KAAK,SAASL,UAAU,sBAAqB,SACnD,cAAC,IAAI,CAACO,GAAG,UAAS,yBAGtB,qBACEP,UAAU,gBACVC,GAAG,iBACHC,KAAK,WACL,kBAAgB,qBAK1B,EC6CeM,EApIA,WACb,MAAkC5B,mBAAS,CACzC6B,SAAU,GACVC,UAAW,GACXC,SAAU,GACV9B,MAAO,GACPC,SAAU,KACV,mBANKC,EAAS,KAAE6B,EAAY,KAO9B,EAAsC3B,YAAY1B,GAAY,mBAAvDsD,EAAU,YAAIzB,EAAK,EAALA,MAAOC,EAAI,EAAJA,KAEtBF,EAAe,SAACG,GACpB,MAAwBA,EAAMC,OAAtBC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAEdmB,EAAa,2BACR7B,GAAS,kBACXS,EAAOC,IAEZ,EAEMC,EAAgB,iDAAG,WAAOJ,GAAK,mFAEZ,OADvBA,EAAMK,iBACNC,QAAQC,IAAId,GAAW,kBAGE8B,EAAW,CAChCf,UAAU,eAAMf,KACf,KAAD,WAFMM,EAAI,EAAJA,KAIRU,EAAKb,MAAMG,EAAKwB,WAAWjD,OAAO,kDAElCgC,QAAQR,MAAM,EAAD,IAAI,0DAEpB,gBAbqB,sCAetB,OACE,sBAAMY,UAAU,mCAAkC,SAChD,qBAAKA,UAAU,kBAAiB,SAC9B,qBAAKA,UAAU,sDAAqD,SAClE,sBAAKA,UAAU,4BAA2B,UACxC,qBAAKA,UAAU,sBAAqB,SAClC,oBAAIA,UAAU,qCAAoC,uBAEnDX,EACC,0DAC4B,IAC1B,cAAC,IAAI,CAACkB,GAAG,IAAG,sCAGhB,uBAAMJ,SAAUT,EAAiB,UAC/B,qBAAKM,UAAU,0CAAyC,SACtD,qBAAKA,UAAU,4BAA2B,SACxC,qBAAKA,UAAU,kDAAiD,SAC9D,sBAAKA,UAAU,yBAAwB,UACrC,qBAAKA,UAAU,YAAW,SACxB,uBACEA,UAAU,eACVI,YAAY,oBACZZ,KAAK,WACLa,KAAK,OACLZ,MAAOV,EAAU0B,SACjBH,SAAUnB,MAId,qBAAKa,UAAU,YAAW,SACxB,uBACEA,UAAU,eACVI,YAAY,kBACZZ,KAAK,YACLa,KAAK,OACLZ,MAAOV,EAAU2B,UACjBJ,SAAUnB,MAId,qBAAKa,UAAU,YAAW,SACxB,uBACEA,UAAU,eACVI,YAAY,iBACZZ,KAAK,WACLa,KAAK,OACLZ,MAAOV,EAAU4B,SACjBL,SAAUnB,MAId,qBAAKa,UAAU,YAAW,SACxB,uBACEA,UAAU,eACVI,YAAY,aACZZ,KAAK,QACLa,KAAK,QACLZ,MAAOV,EAAUF,MACjByB,SAAUnB,MAId,qBAAKa,UAAU,YAAW,SACxB,uBACEA,UAAU,eACVI,YAAY,oBACZZ,KAAK,WACLa,KAAK,WACLZ,MAAOV,EAAUD,SACjBwB,SAAUnB,eAOtB,wBACAa,UAAU,4BACVc,MAAO,CAAEC,OAAQ,WACjBV,KAAK,SAAQ,uBAMdjB,GACC,qBAAKY,UAAU,gCAA+B,SAC3CZ,EAAM4B,kBAQvB,EC3EeC,EAhDF,WAKX,OACE,+BAEE,sBAAKjB,UAAU,4BAA2B,UACxC,qBAAKA,UAAU,8CAcf,qBAAKA,UAAU,WAAWc,MAAO,CAAEI,OAAQ,sBAAuB,SAChE,qBAAKJ,MAAO,CAAEI,OAAQ,sBAAuB,SAC3C,oDASF,qBAAKlB,UAAU,kDAYzB,E,iBChCemB,EAxBS,SAAH,GAAoB,IAAfC,EAAQ,EAARA,SAExB,OADAxB,QAAQC,IAAIuB,GACPA,EAASC,OAIZ,8BACGD,GACCA,EAASE,KAAI,SAACC,GAAO,OACnB,qBAAuBvB,UAAU,YAAW,SAC1C,cAAC,IAAI,CACHA,UAAU,wCACVO,GAAE,oBAAegB,EAAQC,KAAM,SAE/B,oBAAIxB,UAAU,4CAA2C,SACxDuB,EAAQE,iBANHF,EAAQC,IASZ,MAfL,sDAmBX,EC2DeE,EA5EI,SAAH,GAAc,EAARN,SAAgB,IACpC,EAAkCxC,mBAAS,CACzC6C,YAAa,GACbE,mBAAoB,KACpB,mBAHK5C,EAAS,KAAEC,EAAY,KAI9B,EAAyCC,YAAYzB,GAAe,mBAA7DoE,EAAa,YAEdzC,GAFuB,EAALC,MAAW,EAAJC,KAEV,SAACC,GACpB,MAAwBA,EAAMC,OAAtBC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAEdT,EAAa,2BACRD,GAAS,kBACXS,EAAOC,IAEZ,GAEMC,EAAgB,iDAAG,WAAOJ,GAAK,mFAEZ,OADvBA,EAAMK,iBACNC,QAAQC,IAAId,GAAW,kBAEE6C,EAAc,CACnC9B,UAAU,eAAMf,KACf,KAAD,WAFMM,EAAI,EAAJA,KAGRO,QAAQC,IAAIR,GACZf,OAAOC,SAASC,OAAO,aAAD,OAAca,EAAKuC,cAAcJ,MAAO,kDAE9D5B,QAAQR,MAAM,EAAD,IAAI,QAEnBJ,EAAa,CACXyC,YAAa,GACbE,mBAAoB,KACnB,0DACJ,gBAhBqB,sCAkBtB,OACI,iCACE,+CACA,sBAAK3B,UAAU,cAAa,UAC1B,qBACEA,UAAU,4BACVC,GAAG,cACHC,KAAK,WACL,kBAAgB,cAElB,uBAAMC,SAAUT,EAAiB,UAC/B,sBAAKM,UAAU,oBAAmB,UAChC,uBAAOA,UAAU,aAAY,0BAC7B,uBACEA,UAAU,eACVI,YAAY,eACZC,KAAK,cACLb,KAAK,cACLC,MAAOV,EAAU0C,YACjBnB,SAAUnB,OAGd,uBAAOa,UAAU,aAAY,iCAC7B,qBAAKA,UAAU,oBAAmB,SAChC,uBACEA,UAAU,eACVI,YAAY,sBACZC,KAAK,qBACLb,KAAK,qBACLC,MAAOV,EAAU4C,mBACjBrB,SAAUnB,MAGd,wBAAQkB,KAAK,SAASL,UAAU,iCAAgC,4BAO5E,EC9Ca6B,EAAiBvE,YAAG,sJAYpBwE,EAAgBxE,YAAG,kbCyBjByE,EA1DE,WACf,MAA0BC,YAASH,GAA3BI,EAAO,EAAPA,QAAS5C,EAAI,EAAJA,KACX+B,GAAe,OAAJ/B,QAAI,IAAJA,OAAI,EAAJA,EAAM6C,cAAe,GAEtC,OACE,cAACC,EAAA,EAAS,CAACC,OAAK,WACd,+BAEE,sBAAKpC,UAAU,4BAA2B,UACxC,qBAAKA,UAAU,8CAcf,sBAAKA,UAAU,WAAWc,MAAO,CAAEI,OAAQ,sBAAuB,UAChE,qBAAKJ,MAAO,CAAEI,OAAQ,sBAAuB,SAC5Ce,EACG,6CAEA,cAAC,EAAU,MAGf,sBAAKnB,MAAO,CAAEI,OAAQ,sBAAuB,UAC7C,8CACGe,EACC,6CAEA,cAACI,EAAW,CAACjB,SAAUA,UAO7B,qBAAKpB,UAAU,oDAazB,ECZeiB,EA7CF,WAKX,OACE,cAACkB,EAAA,EAAS,CAACC,OAAK,WACd,+BAEE,sBAAKpC,UAAU,4BAA2B,UACxC,qBAAKA,UAAU,8CAaf,qBAAKA,UAAU,WAAWc,MAAO,CAAEI,OAAQ,sBAAuB,SAChE,qBAAKJ,MAAO,CAAEI,OAAQ,sBAAuB,SAC7C,6DASF,qBAAKlB,UAAU,oDASzB,ECzBesC,EA7BW,SAAH,GAAmB,IAAdf,EAAO,EAAPA,QAE1B,OADA3B,QAAQC,IAAI0B,EAAQC,KACfD,EAAQF,OAKX,8BACGE,GACCA,EAAQD,KAAI,SAACC,GAAO,OAClB,sBAAuBvB,UAAU,YAAW,UAC1C,8BACE,oBAAIA,UAAU,4CAA2C,SAAEuB,EAAQgB,gBAGrE,8BACE,oBAAIvC,UAAU,4CAA2C,SAAEuB,EAAQiB,uBAGrE,8BACE,oBAAIxC,UAAU,4CAA2C,SAAEuB,EAAQkB,YAV7DlB,EAAQC,IAaZ,MApBL,wDAwBX,ECFekB,EAzBK,SAAH,GAAoB,IAAftB,EAAQ,EAARA,SAEpB,OADAxB,QAAQC,IAAIuB,EAASI,KAChBJ,EAASuB,MAAMtB,OAKlB,8BACGD,GACCA,EAASE,KAAI,SAACsB,GAAI,OAChB,qBAAwB5C,UAAU,YAAW,SAC3C,cAAC,IAAI,CACHA,UAAU,wCACVO,GAAE,oBAAea,EAASI,IAAG,YAAIoB,GAAO,SAExC,oBAAI5C,UAAU,4CAA2C,SACxDoB,EAASK,iBANJL,EAASI,IASb,MAhBL,mDAoBX,ECwDeqB,EAlEO,WACpB,IAAKC,EAAaC,cAAbD,UACL,EAA0Bd,YAASF,EAAe,CAAChC,UAAW,CAAEgD,eAAxDb,EAAO,EAAPA,QAAS5C,EAAI,EAAJA,KACXkC,GAAc,OAAJlC,QAAI,IAAJA,OAAI,EAAJA,EAAM2D,iBAAkB,CAAC,EAGzC,OAFApD,QAAQC,IAAI0B,GAGV,iCAEE,sEACA,qBAAKvB,UAAU,0BAAyB,SACtC,qBACEA,UAAU,4BACVc,MAAO,CAAEI,OAAQ,0BAejB,sBAAKlB,UAAU,WAAWc,MAAO,CAAEI,OAAQ,sBAAuB,UAEhE,oDACA,qBAAKJ,MAAO,CAAEI,OAAQ,sBAAuB,SAC1Ce,EACC,6CAEA,cAAC,EAAiB,CAACb,SAAUG,MAIjC,sBAAKT,MAAO,CAAEI,OAAQ,sBAAuB,UAC3C,+CACCe,EACC,6CAEA,cAAC,EAAW,CAACU,MAAOpB,UAO9B,qBAAKvB,UAAU,0BAAyB,SACtC,qBACEA,UAAU,4BACVc,MAAO,CAAEI,OAAQ,4BAU3B,ECfe+B,EAnDD,WAKZ,OACE,cAACd,EAAA,EAAS,CAACC,OAAK,WACd,+BAEE,sBAAKpC,UAAU,4BAA2B,UACxC,qBAAKA,UAAU,8CAcf,sBAAKA,UAAU,WAAWc,MAAO,CAAEI,OAAQ,sBAAuB,UAChE,iDACA,wBAMA,2BAQF,qBAAKlB,UAAU,oDASzB,ECLekD,EArDA,WAMb,OACE,wBAAQlD,UAAU,wDAAuD,SAEvE,qBAAKA,UAAU,mEAAkE,SAC/E,sBAAKA,UAAU,mDAAkD,UAC/D,mBAAGA,UAAU,eAAemD,KAAK,IAAG,SAClC,+CAEF,wBACEnD,UAAU,iBACVK,KAAK,SACL,iBAAe,WACf,iBAAe,aACf,gBAAc,YACd,gBAAc,QACd,aAAW,oBAAmB,SAE9B,sBAAML,UAAU,0BAElB,sBAAKA,UAAU,wBAAuB,UACpC,qBAAKA,UAAU,WAAU,SACvB,mBAAGA,UAAU,kBAAkB,eAAa,OAAOmD,KAAK,8BAA6B,yBAIvF,qBAAKnD,UAAU,yBAAwB,SACrC,qBAAKA,UAAU,WAAU,SACvB,mBAAGA,UAAU,WAAWmD,KAAK,YAAW,0BAK5C,qBAAKnD,UAAU,sBAAqB,SAClC,qBAAKA,UAAU,WAAU,SACvB,mBAAGA,UAAU,WAAWmD,KAAK,mBAAkB,+BAW/D,EC1CeC,EAXA,WACIC,cACAC,cACjB,OACE,yBAAQtD,UAAU,oBAAmB,UACjC,6BAAI,2DACJ,6BAAI,wFAGZ,ECWMuD,EAAWC,YAAe,CAC9BC,IAAK,aAIDC,GAAWC,aAAW,SAACC,EAAE,GAAkB,IAAfC,EAAO,EAAPA,QAE1BjG,EAAQK,aAAaE,QAAQ,YAEnC,MAAO,CACL0F,QAAQ,2BACHA,GAAO,IACVC,cAAelG,EAAK,iBAAaA,GAAU,KAGjD,IAEMmG,GAAS,IAAIC,IAAa,CAE9BC,KAAMP,GAASQ,OAAOX,GACtBY,MAAO,IAAIC,MAyDEC,OAtDf,WACE,OACE,eAACC,EAAA,EAAc,CAACP,OAAQA,GAAO,UAC7B,cAAC,IAAM,UACL,sBAAK/D,UAAU,4CAA2C,UACxD,cAAC,EAAM,IACP,qBAAKA,UAAU,mBAAkB,SAC/B,eAAC,IAAM,WACL,cAAC,IAAK,CACNuE,KAAK,IACLC,QAAS,cAAC,EAAI,MAEd,cAAC,IAAK,CACND,KAAK,UACLC,QAAS,cAAC,EAAM,MAEhB,cAAC,IAAK,CACND,KAAK,QACLC,QAAS,cAAC,EAAI,MAEd,cAAC,IAAK,CACND,KAAK,YACLC,QAAS,cAAC,EAAQ,MAElB,cAAC,IAAK,CACND,KAAK,mBACLC,QAAS,cAAC,EAAI,MAEd,cAAC,IAAK,CACND,KAAK,8BACLC,QAAS,cAACC,EAAS,MAEnB,cAAC,IAAK,CACNF,KAAK,uBACHC,QAAS,cAAC,EAAiB,MAM7B,cAAC,IAAK,CACJD,KAAK,+BACLC,QAAS,cAACE,EAAc,WAI9B,cAAC,EAAM,SAGV9E,QAAQC,IAAI,iBAGnB,ECtFe8E,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EACV,GAEJ,ECHAQ,IAASC,OACP,cAAC,IAAMC,WAAU,UACf,cAAC,GAAG,MAENC,SAASC,eAAe,SAM1Bb,I","file":"static/js/main.cea49a5e.chunk.js","sourcesContent":["import { gql } from '@apollo/client';\n\nexport const LOGIN_USER = gql`\nmutation Login($email: String!, $password: String!) {\n  login(email: $email, password: $password) {\n    token\n    user {\n      _id\n      username\n      email\n    }\n  }\n}\n`;\n\nexport const CREATE_USER = gql`\nmutation CreateUser($username: String!, $email: String!, $password: String!, $firstName: String!, $lastName: String!) {\n  createUser(username: $username, email: $email, password: $password, firstName: $firstName, lastName: $lastName) {\n    token\n    user {\n      username\n      _id\n    }\n  }\n}\n`;\n\n// export const CREATE_USERCOMMENT = gql`\n//   mutation createUserComment($messageText: String!) {\n//     createUserComment(messageText: $messageText) {\n//       _id\n//       messageText\n//       messageAuthor\n//       createdAt\n//     }\n//   }\n// `;\n\n// export const UPDATE_USERCOMMENT = gql`\n//   mutation updateUserComment($messageText: String!) {\n//     updateUserComment(messageText: $messageText) {\n//       _id\n//       messageText\n//       messageAuthor\n//       createdAt\n//     }\n//   }\n// `;\n\nexport const CREATE_PROJECT = gql`\nmutation CreateProject($projectName: String!, $projectDescription: String!) {\n  createProject(projectName: $projectName, projectDescription: $projectDescription) {\n    owner\n    _id\n    projectName\n    projectDescription\n  }\n}\n`;\n\nexport const CREATE_PROJECTCOMMENT = gql`\nmutation Mutation($commentText: String!, $projectName: String!) {\n  createProjectComment(commentText: $commentText, projectName: $projectName) {\n    commentText\n    username\n    projectRecipient\n    createdAt\n    updatedAt\n  }\n}\n`;\n\n// export const UPDATE_PROJECTCOMMENT = gql`\n//   mutation updateProjectComment($messageText: String!) {\n//     updateProjectComment(messageText: $messageText) {\n//       _id\n//       messageText\n//       messageAuthor\n//       createdAt\n//     }\n//   }\n// `;\n\n// export const CREATE_TASK = gql`\n//   mutation createTask($taskText: String!) {\n//     createTask(taskText: $taskText) {\n//       _id\n//       taskText\n//       createdAt\n//     }\n//   }\n// `;\n\n// export const UPDATE_PROJECTTASK = gql`\n//   mutation updateProjectTask($taskText: String!) {\n//     updateProjectTask(taskText: $taskText) {\n//       _id\n//       taskText\n//       createdAt\n//     }\n//   }\n// `;\n// export const UPDATE_PROJECTTASK = gql`\n//   mutation updateProjectTask($taskText: String!) {\n//     updateProjectTask(taskText: $taskText) {\n//       _id\n//       taskText\n//       createdAt\n//     }\n//   }\n// `;\n\n// export const DELETE_PROJECTTASK = gql`\n//   mutation deleteProjectTask($taskText: String!) {\n//     deleteProjectTask(taskText: $taskText) {\n//       _id\n//       taskText\n//       createdAt\n//     }\n//   }\n// `;\n// export const DELETE_PROJECTTASK = gql`\n//   mutation deleteProjectTask($taskText: String!) {\n//     deleteProjectTask(taskText: $taskText) {\n//       _id\n//       taskText\n//       createdAt\n//     }\n//   }\n// `;\n\n// export const ADD_PROJECTMEMBER = gql`\n//   mutation addProjectMemeber($) {\n//     addProjectMember() {\n//       _id\n// export const ADD_PROJECTMEMBER = gql`\n//   mutation addProjectMemeber($) {\n//     addProjectMember() {\n//       _id\n\n//     }\n//   }\n// `;\n//     }\n//   }\n// `;\n\n// export const UPDATE_USERPROJECTS = gql`\n//   mutation updateUserProjects($) {\n//     updateUserProjects() {\n//       _id\n// export const UPDATE_USERPROJECTS = gql`\n//   mutation updateUserProjects($) {\n//     updateUserProjects() {\n//       _id\n\n//     }\n//   }\n// `;\n//     }\n//   }\n// `;\n\n// export const UPDATE_USERCOWORKERS = gql`\n//   mutation updateUserCoworkers($) {\n//     updateUserCoworkers() {\n//       _id\n// export const UPDATE_USERCOWORKERS = gql`\n//   mutation updateUserCoworkers($) {\n//     updateUserCoworkers() {\n//       _id\n\n//     }\n//   }\n// `;\n//     }\n//   }\n// `;\n\n// export const UPDATE_USERABOUTME = gql`\n//   mutation updateUserAboutMe($) {\n//     updateUserAboutMe() {\n//       _id\n// export const UPDATE_USERABOUTME = gql`\n//   mutation updateUserAboutMe($) {\n//     updateUserAboutMe() {\n//       _id\n\n//     }\n//   }\n// `;\n//     }\n//   }\n// `;","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    // If there is a token and it's not expired, return `true`\n    return token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  isTokenExpired(token) {\n    // Decode the token to get its expiration time that was set by the server\n    const decoded = decode(token);\n    // If the expiration time is less than the current time (in seconds), the token is expired and we return `true`\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem('id_token');\n      return true;\n    }\n    // If token hasn't passed its expiration time, return `false`\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/user');\n  }\n\n  logout() {\n    localStorage.removeItem('id_token');\n    window.location.reload();\n  }\n}\n\nexport default new AuthService();\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\n\nimport { LOGIN_USER } from \"../utils/mutations\";\n\nimport Auth from \"../utils/auth\";\n\nconst Home = (props) => {\n  const [formState, SetFormState] = useState({ email: \"\", password: \"\" });\n  const [login, { error, data }] = useMutation(LOGIN_USER);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    SetFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    SetFormState({\n      email: \"\",\n      password: \"\",\n    });\n  };\n\n  return (\n    <main>\n      <div className=\"tab-content\">\n        <div\n          className=\"tab-pane fade show active\"\n          id=\"pills-login\"\n          role=\"tabpanel\"\n          aria-labelledby=\"tab-login\"\n        >\n          <form onSubmit={handleFormSubmit}>\n            <div className=\"form-outline mb-4\">\n              <label className=\"form-label\">\n                Email\n              </label>\n              <input\n                className=\"form-control\"\n                placeholder=\"Your email\"\n                type=\"email\"\n                name=\"email\"\n                value={formState.email}\n                onChange={handleChange}\n              />\n            </div>\n            <label className=\"form-label\">\n              Password\n            </label>\n            <div className=\"form-outline mb-4\">\n              <input\n                className=\"form-control\"\n                placeholder=\"******\"\n                type=\"password\"\n                name=\"password\"\n                value={formState.password}\n                onChange={handleChange}\n              />\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary btn-block mb-4\">\n              Sign in\n            </button>\n          </form>\n          <button type=\"submit\" className=\"btn  btn-block mb-4\">\n            <Link to=\"/signup\">Signup</Link>\n          </button>\n        </div>\n        <div\n          className=\"tab-pane fade\"\n          id=\"pills-register\"\n          role=\"tabpanel\"\n          aria-labelledby=\"tab-register\"\n        ></div>\n      </div>\n    </main>\n  );\n};\n\nexport default Home;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { CREATE_USER } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\n\nconst Signup = () => {\n  const [formState, setFormState] = useState({\n    username: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  const [createUser, { error, data }] = useMutation(CREATE_USER);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n\n    try {\n      const { data } = await createUser({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.createUser.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <main className=\"flex-row justify-center mb-4 row\">\n      <div className=\"container h-100\">\n        <div className=\"row h-100 justify-content-center align-items-center\">\n          <div className=\"col-lg-12 col-lg-offset-4\">\n            <div className=\"container col-lg-12\">\n              <h4 className=\"card-header bg-dark text-light p-2\">Sign Up</h4>\n            </div>\n            {data ? (\n              <p>\n                Success! You may now head{' '}\n                <Link to=\"/\">back to the homepage.</Link>\n              </p>\n            ) : (\n            <form onSubmit={handleFormSubmit}>\n              <div className=\"container d-flex justify-content-center\">\n                <div className=\"col-lg-12 col-lg-offset-4\">\n                  <div className=\"d-flex justify-content-center lign-items-center\">\n                    <div className=\"vstack gap-3 col-lg-10\">\n                      <div className=\"mb-3 mt-3\">\n                        <input\n                          className=\"form-control\"\n                          placeholder=\"Create a username\"\n                          name=\"username\"\n                          type=\"text\"\n                          value={formState.username}\n                          onChange={handleChange}\n                        />\n                      </div>\n\n                      <div className=\"mb-3 mt-3\">\n                        <input\n                          className=\"form-control\"\n                          placeholder=\"Your First Name\"\n                          name=\"firstName\"\n                          type=\"text\"\n                          value={formState.firstName}\n                          onChange={handleChange}\n                        />\n                      </div>\n\n                      <div className=\"mb-3 mt-3\">\n                        <input\n                          className=\"form-control\"\n                          placeholder=\"Your Last Name\"\n                          name=\"lastName\"\n                          type=\"text\"\n                          value={formState.lastName}\n                          onChange={handleChange}\n                        />\n                      </div>\n\n                      <div className=\"mb-3 mt-3\">\n                        <input\n                          className=\"form-control\"\n                          placeholder=\"Your email\"\n                          name=\"email\"\n                          type=\"email\"\n                          value={formState.email}\n                          onChange={handleChange}\n                        />\n                      </div>\n\n                      <div className=\"mb-3 mt-3\">\n                        <input\n                          className=\"form-control\"\n                          placeholder=\"Create a password\"\n                          name=\"password\"\n                          type=\"password\"\n                          value={formState.password}\n                          onChange={handleChange}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <button\n              className=\"btn btn-block btn-primary\"\n              style={{ cursor: \"pointer\" }}\n              type=\"submit\"\n            >\n              Submit\n            </button>\n            </form>\n            )}\n            {error && (\n              <div className=\"my-3 p-3 bg-danger text-white\">\n                {error.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Signup;\n","import React from \"react\";\n// import { useParams } from 'react-router-dom';\n// import { useQuery } from '@apollo/client';\n// import { useMutation } from '@apollo/client';\n\n// import MyMessageForm from '../components/MyMessageForm';\n// import MyMessageList from '../components/MyMessageList';\n// import MyProjectList from '../components/MyProjects';\n// import UserComp from '../components/UserComp';\n\n// import { QUERY_USERCOMMENTS, QUERY_PROJECTS} from '../utils/queries';\n// import { ADD_USERCOMMENT } from '../utils/mutations';\n\nconst User = () => {\n  // const { loading, data } = useQuery(QUERY_USERCOMMENTS, QUERY_PROJECTS);\n  // const comments = data?.comments || [];\n  // const projects = data?.projects || [];\n\n  return (\n    <main>\n      {/* My Messages/comments should hug the left side of the page, likely col-3 */}\n      <div className=\"text-center row col-xl-12\">\n        <div className=\"col-xl-2 justify-content-left bg-primary \">\n          {/* <MyMessageForm /> */}\n          {/* <div className=\"col-12 col-xl-8 mb-3\">\n                {loading ? (\n                  <div>Loading...</div>\n                ) : ( null\n                  <MyMessageList\n                  comments={comments}\n                  title=\"Some Feed for Thought(s)...\"\n                  />\n                )}\n              </div> */}\n        </div>\n\n        <div className=\"col-xl-8\" style={{ border: \"1px dotted #1a1a1a\" }}>\n          <div style={{ border: \"1px dotted #1a1a1a\" }}>\n            <h3>USER COMPONENT</h3>\n            {/*  */}\n            {/* Eventually, the User Compoents go in another div here.  Whatever we decide those are.  About me and such? */}\n            {/*  */}\n          </div>\n        </div>\n\n          {/* my projects should hug the right side of the page. likely col-3 */}\n\n          <div className=\"col-xl-2 justify-content-left bg-primary \">\n            {/* {loading ? (\n              <div>Loading...</div>\n            ) : (\n            <MyProjects \n            projects={projects}\n            />\n            )} */}\n          </div>\n      </div>\n    </main>\n  );\n};\n\nexport default User;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst AllProjectsList = ({projects}) => {\n  console.log(projects);\n  if (!projects.length) {\n    return <h3>There are no projects</h3>;\n  }\n  return (\n    <div>\n      {projects &&\n        projects.map((project) => (\n          <div key={project._id} className=\"card mb-3\">\n            <Link\n              className=\"btn btn-primary btn-block btn-squared\"\n              to={`/projects/${project._id}`}\n            >\n              <h4 className=\"card-header bg-primary text-light p-2 m-0\">\n              {project.projectName}\n            </h4>\n            </Link>\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default AllProjectsList;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\n\nimport { CREATE_PROJECT } from \"../utils/mutations\";\n\nimport Auth from \"../utils/auth\";\n\nconst AddProject = ({ projects }) => {\n  const [formState, SetFormState] = useState({\n    projectName: \"\",\n    projectDescription: \"\",\n  });\n  const [createProject, { error, data }] = useMutation(CREATE_PROJECT);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    SetFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n    try {\n      const { data } = await createProject({\n        variables: { ...formState },\n      });\n      console.log(data);\n      window.location.assign(`/projects/${data.createProject._id}`);\n    } catch (e) {\n      console.error(e);\n    }\n    SetFormState({\n      projectName: \"\",\n      projectDescription: \"\",\n    });\n  };\n\n  return (\n      <main>\n        <h3>Add a Project</h3>\n        <div className=\"tab-content\">\n          <div\n            className=\"tab-pane fade show active\"\n            id=\"pills-login\"\n            role=\"tabpanel\"\n            aria-labelledby=\"tab-login\"\n          ></div>\n          <form onSubmit={handleFormSubmit}>\n            <div className=\"form-outline mb-4\">\n              <label className=\"form-label\">Project Name</label>\n              <input\n                className=\"form-control\"\n                placeholder=\"Project Name\"\n                type=\"projectName\"\n                name=\"projectName\"\n                value={formState.projectName}\n                onChange={handleChange}\n              />\n            </div>\n            <label className=\"form-label\">Project Description</label>\n            <div className=\"form-outline mb-4\">\n              <input\n                className=\"form-control\"\n                placeholder=\"Project Description\"\n                type=\"projectDescription\"\n                name=\"projectDescription\"\n                value={formState.projectDescription}\n                onChange={handleChange}\n              />\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary btn-block mb-4\">\n              Submit\n            </button>\n          </form>\n        </div>\n      </main>\n  );\n};\n\nexport default AddProject;\n","import { gql } from '@apollo/client';\n\n\n// export const QUERY_ME = gql`\n// query Me {\n//   me {\n//     username\n//     email\n//     firstName\n//     lastName\n//     aboutMe\n//   }\n// }`;\n\n// export const QUERY_USER = gql`\n// query GetUserByUsername($username: String!) {\n//   GetUserByUsername(username: $username) {\n//     _id\n//     email\n//     firstName\n//     lastName\n//     username\n//   }\n// `;\n\n// export const QUERY_USERCOMMENTS = gql`\n//   query getUserCommentsByUsername {\n//     userComment {\n//       _id\n//       messageText\n//       messageAuthor\n//       createdAt\n//     }\n//   }\n// `;\n\nexport const QUERY_PROJECTS = gql`\nquery GetProjects {\n  GetProjects {\n    _id\n    projectName\n    projectDescription\n    owner\n    createdAt\n  }\n}\n`;\n\nexport const QUERY_PROJECT = gql`\nquery GetProjects($projectId: ID!) {\n  GetProjectById(projectId: $projectId) {\n    projectName\n    projectDescription\n    owner\n    members\n    comments {\n      _id\n      username\n      commentText\n      createdAt\n      updatedAt\n    }\n    tasks {\n      _id\n      username\n      taskName\n      createdAt\n      updatedAt\n      isComplete\n      isInProgress\n      isOpen\n    }\n  }\n}\n`;\n\n// export const QUERY_PROJECTCOMMENTS = gql`\n// query GetProjectComments($projectName: String!) {\n//   GetProjectComments(projectName: $projectName) {\n//     _id\n//     comments {\n//       commentText\n//       username\n//       createdAt\n//       updatedAt\n//     }\n//     projectName\n//     projectDescription\n//     owner\n//   }\n// }\n// `;\n\n// export const QUERY_PROJECTTASKS = gql`\n// query GetProjectTasks($projectName: String!) {\n//   GetProjectTasks(projectName: $projectName) {\n//     projectName\n//     projectDescription\n//     tasks {\n//       username\n//       taskName\n//       isComplete\n//       isOpen\n//       isInProgress\n//       createdAt\n//       updatedAt\n//     }\n//   }\n// }\n// `;","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\nimport { useMutation } from \"@apollo/client\";\nimport { Container } from \"react-bootstrap\";\n\n// import MyMessageForm from '../components/MyMessageForm';\n// import MyMessageList from '../components/MyMessageList';\n// import MyProjects from '../components/MyProjects';\nimport AllProjects from \"../components/AllProjects\";\nimport AddProject from \"../components/AddProject\";\n\nimport { QUERY_PROJECTS } from \"../utils/queries\";\n// import { ADD_PROJECT } from '../utils/mutations';\n\nconst Projects = () => {\n  const { loading, data } = useQuery(QUERY_PROJECTS);\n  const projects = data?.GetProjects || [];\n  \n  return (\n    <Container fluid>\n      <main>\n        {/* My Messages/comments should hug the left side of the page, likely col-3 */}\n        <div className=\"text-center row col-xl-12\">\n          <div className=\"col-xl-2 justify-content-left bg-primary \">\n            {/* <MyMessageForm /> */}\n            {/* <div className=\"col-12 col-xl-8 mb-3\">\n                {loading ? (\n                  <div>Loading...</div>\n                ) : ( null\n                  <MyMessageList\n                  comments={comments}\n                  title=\"Some Feed for Thought(s)...\"\n                  />\n                )}\n              </div> */}\n          </div>\n\n          <div className=\"col-xl-8\" style={{ border: \"1px dotted #1a1a1a\" }}>\n            <div style={{ border: \"1px dotted #1a1a1a\" }}>\n            {loading ? (\n                <div>Loading...</div>\n              ) : (\n                <AddProject/>\n              )}\n            </div>\n            <div style={{ border: \"1px dotted #1a1a1a\" }}>\n            <h3>All Projects</h3>\n              {loading ? (\n                <div>Loading...</div>\n              ) : (\n                <AllProjects projects={projects} />\n              )}\n            </div>\n          </div>\n\n          {/* my projects should hug the right side of the page. likely col-3 */}\n\n          <div className=\"col-xl-2 justify-content-left bg-primary \">\n            {/* {loading ? (\n              <div>Loading...</div>\n            ) : (\n            <MyProjects \n            projects={projects}\n            />\n            )} */}\n          </div>\n        </div>\n      </main>\n    </Container>\n  );\n};\n\nexport default Projects;\n","import React from \"react\";\n// import { useParams } from 'react-router-dom';\n// import { useQuery } from '@apollo/client';\n// import { useMutation } from '@apollo/client';\nimport { Container } from \"react-bootstrap\";\n\n// import MyMessageForm from '../components/MyMessageForm';\n// import MyMessageList from '../components/MyMessageList';\n// import MyProjectList from '../components/MyProjects';\n// import UserComp from '../components/UserComp';\n\n// import { QUERY_USERCOMMENTS, QUERY_PROJECTS} from '../utils/queries';\n// import { ADD_USERCOMMENT } from '../utils/mutations';\n\nconst User = () => {\n  // const { loading, data } = useQuery(QUERY_USERCOMMENTS, QUERY_PROJECTS);\n  // const comments = data?.comments || [];\n  // const projects = data?.projects || [];\n\n  return (\n    <Container fluid>\n      <main>\n        {/* My Messages/comments should hug the left side of the page, likely col-3 */}\n        <div className=\"text-center row col-xl-12\">\n          <div className=\"col-xl-2 justify-content-left bg-primary \">\n            {/* <div className=\"col-12 col-md-8 mb-3\">\n          {loading ? (\n            <div>Loading...</div>\n          ) : ( null\n            <MyMessageList\n            comments={comments}\n            title=\"Some Feed for Thought(s)...\"\n            />\n          )}\n        </div> */}\n          </div>\n\n          <div className=\"col-xl-8\" style={{ border: \"1px dotted #1a1a1a\" }}>\n            <div style={{ border: \"1px dotted #1a1a1a\" }}>\n            <h3>All Coworkers COMPONENT</h3>\n              {/*  */}\n              {/* Eventually, the User Compoents go in another div here.  Whatever we decide those are.  About me and such? */}\n              {/*  */}\n            </div>\n          </div>\n\n          {/* my projects should hug the right side of the page. likely col-3 */}\n\n          <div className=\"col-xl-2 justify-content-left bg-primary \">\n            {/* <MyProjects \n          projects={projects}\n          /> */}\n          </div>\n        </div>\n      </main>\n    </Container>\n  );\n};\n\nexport default User;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst IndividualProject = ({project}) => {\n  console.log(project._id);\n  if (!project.length) {\n    return <h3>THERE HAS BEEN AN ERROR</h3>;\n  }\n\n  return (\n    <div>\n      {project &&\n        project.map((project) => (\n          <div key={project._id} className=\"card mb-3\">\n            <div>\n              <h4 className=\"card-header bg-primary text-light p-2 m-0\">{project.ProjectName}\n              </h4>\n            </div>\n            <div>\n              <h4 className=\"card-header bg-primary text-light p-2 m-0\">{project.ProjectDescription}\n              </h4>\n            </div>\n            <div>\n              <h4 className=\"card-header bg-primary text-light p-2 m-0\">{project.owner}\n              </h4>\n            </div>         \n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default IndividualProject;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst ProjectTask = ({projects}) => {\n  console.log(projects._id);\n  if (!projects.tasks.length) {\n    return <h3>This task is empty</h3>;\n  }\n\n  return (\n    <div>\n      {projects &&\n        projects.map((task) => (\n          <div key={projects._id} className=\"card mb-3\">\n            <Link\n              className=\"btn btn-primary btn-block btn-squared\"\n              to={`/projects/${projects._id}/${task}`}\n            >\n              <h4 className=\"card-header bg-primary text-light p-2 m-0\">\n              {projects.projectName}\n            </h4>\n            </Link>\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default ProjectTask;","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\nimport { useMutation } from \"@apollo/client\";\nimport { Container } from \"react-bootstrap\";\n\n// import ProjectMessageForm from '../components/ProjectMessageForm';\n// import ProjectMessageList from '../components/ProjectMessageList';\n// import MyProjectList from '../components/MyProjects';\nimport IndividualProject from \"../components/IndividualProject\";\nimport ProjectTask from \"../components/ProjectTask\";\n\nimport { QUERY_PROJECT } from \"../utils/queries\";\n// import { ADD_PROJECTCOMMENT} from '../utils/mutations';\n// import { ADD_PROJECTTASK} from '../utils/mutations';\n\nconst SingleProject = () => {\n  var {projectId} = useParams();\n  const { loading, data } = useQuery(QUERY_PROJECT, {variables: { projectId }});\n  const project = data?.GetProjectById || {};\n  console.log(project);\n\n  return (\n    <main>\n      {/* My Messages/comments should hug the left side of the page, likely col-3 */}\n      <h1>THIS IS THE INDIVIDUAL PROJECTS PAGE</h1>\n      <div className=\"flex-row justify-center\">\n        <div\n          className=\"col-12 col-md-10 mb-3 p-3\"\n          style={{ border: '1px dotted #1a1a1a' }}\n        >\n          {/* <ProjectMessageForm /> */}\n        </div>\n        {/* <div className=\"col-12 col-md-8 mb-3\">\n          {loading ? (\n            <div>Loading...</div>\n          ) : ( null\n            <ProjectMessageList\n            comments={comments}\n            title=\"Some Feed for Thought(s)...\"\n            />\n          )}\n        </div> */}\n          </div>\n          <div className=\"col-xl-8\" style={{ border: \"1px dotted #1a1a1a\" }}>\n            {/* Outputs project name and members/owner */}\n            <h3>Individual Project</h3>\n            <div style={{ border: \"1px dotted #1a1a1a\" }}>\n              {loading ? (\n                <div>Loading...</div>\n              ) : (\n                <IndividualProject projects={project} />\n              )}\n            </div>\n            {/* Outputs projects tasks names */}\n            <div style={{ border: \"1px dotted #1a1a1a\" }}>\n              <h3>Project Tasks</h3>\n              {loading ? (\n                <div>Loading...</div>\n              ) : (\n                <ProjectTask tasks={project} />\n              )}\n            </div>\n          </div>\n\n\n      {/* my projects should hug the right side of the page. likely col-3 */}\n      <div className=\"flex-row justify-center\">\n        <div\n          className=\"col-12 col-md-10 mb-3 p-3\"\n          style={{ border: '1px dotted #1a1a1a' }}\n        >\n          {/* <MyProjects \n          projects={projects}\n          /> */}\n          \n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default SingleProject;","import React from \"react\";\n// import { useParams } from 'react-router-dom';\n// import { useQuery } from '@apollo/client';\n// import { useMutation } from '@apollo/client';\nimport { Container } from \"react-bootstrap\";\n\n// import ProjectMessageForm from '../components/ProjectMessageForm';\n// import ProjectMessageList from '../components/ProjectMessageList';\n// import MyProjectList from '../components/MyProjects';\n// import IndividualTask from '../components/IndividualTask';\n\n// import { QUERY_PROJECTCOMMENTS, QUERY_PROJECTS} from '../utils/queries';\n// import { ADD_PROJECTCOMMENT, ADD_TASK} from '../utils/mutations';\n\nconst Tasks = () => {\n  // const { loading, data } = useQuery(QUERY_PROJECTCOMMENTS, QUERY_PROJECTS);\n  // const comments = data?.comments || [];\n  // const projects = data?.projects || [];\n\n  return (\n    <Container fluid>\n      <main>\n        {/* My Messages/comments should hug the left side of the page, likely col-3 */}\n        <div className=\"text-center row col-xl-12\">\n          <div className=\"col-xl-2 justify-content-left bg-primary \">\n            {/* <ProjectMessageForm /> */}\n            {/* <div className=\"col-12 col-md-8 mb-3\">\n          {loading ? (\n            <div>Loading...</div>\n          ) : ( null\n            <ProjectMessageList\n            comments={comments}\n            title=\"Some Feed for Thought(s)...\"\n            />\n          )}\n        </div> */}\n          </div>\n\n          <div className=\"col-xl-8\" style={{ border: \"1px dotted #1a1a1a\" }}>\n            <h3>Individual Task</h3>\n            <div>\n              {/*  */}\n              {/* Eventually, the Name gets pulled and goes here.  Top Center of page, wrapped in blue. */}\n              {/*  */}\n            </div>\n\n            <div>\n              {/*  */}\n              {/* Eventually, the Individual Task Component goes in another div here. */}\n              {/*  */}\n            </div>\n          </div>\n\n          {/* my projects should hug the right side of the page. likely col-3 */}\n          <div className=\"col-xl-2 justify-content-left bg-primary \">\n            {/* <MyProjects \n          projects={projects}\n          /> */}\n          </div>\n        </div>\n      </main>\n    </Container>\n  );\n};\n\nexport default Tasks;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Auth from \"../utils/auth\";\n\nconst Header = () => {\n  const logout = (event) => {\n    event.preventDefault();\n    Auth.logout();\n  };\n\n  return (\n    <header className=\"bg-primary text-light mb-4 py-3 flex-row align center\">\n      {/* // <!-- Navbar --> */}\n      <nav className=\"navbar navbar-expand-lg bg-light flex-row justify-content-center\">\n        <div className=\"container-fluid flex-column align-content-center\">\n          <a className=\"navbar-brand\" href=\"/\">\n            <h1>MyWorkSpace</h1>\n          </a>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-bs-toggle=\"collapse\"\n            data-bs-target=\"#navbarNav\"\n            aria-controls=\"navbarNav\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"container text-center\">\n            <div className=\"nav-item\">\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"/users/:username/:coworkers\">\n                CoWorkers\n              </a>\n            </div>\n            <div className=\"row align-items-center\">\n              <div className=\"nav-item\">\n                <a className=\"nav-link\" href=\"/projects\">\n                  Projects\n                </a>\n              </div>\n            </div>\n            <div className=\"row align-items-end\">\n              <div className=\"nav-item\">\n                <a className=\"nav-link\" href=\"/users/:username\">\n                  User\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>\n      {/* // <!-- Navbar --> */}\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nconst Footer = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  return (\n    <footer className=\"text-align-center\">\n        <h4><center> Made with React by</center></h4>\n        <h4><center>'Github11', 'Github12', 'Github13', 'Github14'</center></h4>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport Home from \"./pages/Home\";\nimport Signup from \"./pages/Signup\";\nimport User from \"./pages/User\";\nimport Projects from \"./pages/Projects\";\nimport Coworkers from \"./pages/Coworkers\";\nimport IndividualProject from \"./pages/IndividualProject\";\nimport IndividualTask from \"./pages/IndividualTask\";\n\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport IndividualCoworkers from \"./components/IndividualCoworkers\";\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem(\"id_token\");\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"flex-column justify-flex-start min-100-vh\">\n          <Header />\n          <div className=\"container col-12\">\n            <Routes>\n              <Route \n              path=\"/\" \n              element={<Home />} \n              />\n              <Route \n              path=\"/signup\" \n              element={<Signup />} \n              />\n              <Route \n              path=\"/user\" \n              element={<User />} \n              />\n              <Route \n              path=\"/projects\" \n              element={<Projects />} \n              />\n              <Route \n              path=\"/users/:username\" \n              element={<User />} \n              />\n              <Route \n              path=\"/users/:username/:coworkers\" \n              element={<Coworkers />}\n              />\n              <Route \n              path=\"/projects/:projectId\"\n                element={<IndividualProject />}\n              />\n              {/* <Route\n                path=\"/coworkers/:coworkerId\"\n                element={<IndividualCoworker/>}\n              /> */}\n              <Route\n                path=\"/projects/:projectId/:taskID\"\n                element={<IndividualTask />}\n              />\n            </Routes>\n          </div>\n          <Footer />\n        </div>\n      </Router>\n      {console.log(\"Hello There\")}\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Container } from \"react-bootstrap\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}